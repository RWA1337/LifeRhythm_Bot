from telegram import Update
from telegram.ext import ContextTypes
from data.recipes import recipes

async def nutrition(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # simple list
    text = "üçΩ –†–µ—Ü–µ–ø—Ç—ã (–≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª—é—á):\n"
    for r in recipes:
        text += f"- {r['key']}: {r['title']}\n"
    text += "\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç: /recipe key"
    await update.message.reply_text(text)

async def recipe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏ –∫–ª—é—á —Ä–µ—Ü–µ–ø—Ç–∞: /recipe ovsyanka")
        return
    key = context.args[0]
    for r in recipes:
        if r['key'] == key:
            txt = f"üçΩ {r['title']}\n–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {', '.join(r['ingredients'])}\n\n–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:\n" + '\n'.join(r['steps'])
            txt += f"\n\n–ö–∞–ª–æ—Ä–∏–∏: ~{r.get('calories','-')} –∫–∫–∞–ª | –ë:{r.get('prot','-')}–≥ –ñ:{r.get('fat','-')}–≥ –£:{r.get('carb','-')}–≥"
            await update.message.reply_text(txt)
            return
    await update.message.reply_text("–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
