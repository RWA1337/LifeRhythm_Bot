from telegram import Update
from telegram.ext import ContextTypes
from db import get_conn
from datetime import datetime

async def challenges(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "üèÜ –ß–µ–ª–ª–µ–Ω–¥–∂–∏:\n1) –í–æ–¥–Ω—ã–π 7-–¥–Ω (–ø–µ–π 2000 –º–ª/–¥–µ–Ω—å)\n\n–û—Ç–º–µ—Ç–∏—Ç—å —Å—Ç–∞–∫–∞–Ω: /water 250\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å: /water status"
    await update.message.reply_text(text)

async def water(update: Update, context: ContextTypes.DEFAULT_TYPE):
    conn = get_conn()
    cur = conn.cursor()
    tg = update.effective_user
    day = datetime.now().strftime("%Y-%m-%d")
    try:
        amount = int(context.args[0]) if context.args else 250
    except:
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: /water 250")
        conn.close()
        return
    cur.execute("SELECT amount_ml FROM water WHERE tg_id=? AND day=?", (tg.id, day))
    r = cur.fetchone()
    if r:
        total = r[0] + amount
        cur.execute("UPDATE water SET amount_ml=? WHERE tg_id=? AND day=?", (total, tg.id, day))
    else:
        total = amount
        cur.execute("INSERT INTO water (tg_id, day, amount_ml) VALUES (?, ?, ?)", (tg.id, day, amount))
    conn.commit()
    conn.close()
    await update.message.reply_text(f"üíß –û—Ç–º–µ—á–µ–Ω–æ {amount} –º–ª. –í—Å–µ–≥–æ —Å–µ–≥–æ–¥–Ω—è: {total} –º–ª (—Ü–µ–ª—å ~2000 –º–ª).")

async def water_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    conn = get_conn()
    cur = conn.cursor()
    tg = update.effective_user
    day = datetime.now().strftime("%Y-%m-%d")
    cur.execute("SELECT amount_ml FROM water WHERE tg_id=? AND day=?", (tg.id, day))
    r = cur.fetchone()
    total = r[0] if r else 0
    conn.close()
    await update.message.reply_text(f"üíß –°–µ–≥–æ–¥–Ω—è –≤—ã–ø–∏—Ç–æ: {total} –º–ª (—Ü–µ–ª—å 2000 –º–ª).")
